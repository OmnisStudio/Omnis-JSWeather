Calculate lLogMsg as con("Reading current data for",kSp,iLocation)
Do $itasks.[tLibName].$updateLog(tIPAddress,lLogMsg) ## ram logging

Calculate iLocation as iJSONRow.name

Calculate lWeatherDescRow as iJSONRow.weather.1
Calculate lCurrentConditionRow as iJSONRow.main
Calculate lWindRow as iJSONRow.wind
Calculate lObservedDateTime as iJSONRow.dt ## unix time
# Calculate lObservedDateTime as 1570007251
Do method convertUnixTime (lObservedDateTime) Returns lObservedDateTimeStr

Calculate iCloudCover as con(iJSONRow.clouds.all,"%")
Calculate lWeatherDescStr as lWeatherDescRow.main
If len(lWeatherDescRow.description)
	Calculate lWeatherDescStr as con(lWeatherDescStr,kSp,"-",kSp,lWeatherDescRow.description)
End If

Calculate iCurrPressure as con(lCurrentConditionRow.pressure,kSp,"mb")

Calculate iCurrWindSpeed as lWindRow.speed ## metres per second
Do method convertMPStoMPH (iCurrWindSpeed) Returns iCurrWindSpeed ## convert to mile per hour
Calculate lCurrWindSpeed as rnd(iCurrWindSpeed,0) ## round to 0 dec places
Do method windDegreesToCompass (lWindRow.deg) Returns iCurrWindDir ## get text desc of compass
Calculate iCurrWindSpeed as con(lCurrWindSpeed,kSp,"mph",kSp,iCurrWindDir)
Calculate iCurrHumidity as con(lCurrentConditionRow.humidity,"%")

Calculate lCurrTemp as con(rnd(lCurrentConditionRow.temp,0),"C")

# save the current conditions
Do iCurrentConditionsList320.1.$assigncols(,lObservedDateTimeStr)
Do iCurrentConditionsList320.2.$assigncols(,lCurrTemp)
Do iCurrentConditionsList320.3.$assigncols(,lWeatherDescStr)
Do iCurrentConditionsList320.4.$assigncols(,iCloudCover)
Do iCurrentConditionsList320.5.$assigncols(,con(lCurrWindSpeed,kSp,'mph')) ## int(lWindRow.speed)
Do iCurrentConditionsList320.6.$assigncols(,iCurrWindDir) ## convert to compass
Do iCurrentConditionsList320.7.$assigncols(,iCurrPressure)
Do iCurrentConditionsList320.8.$assigncols(,iCurrHumidity)
Do iCurrentConditionsList768.1.$assigncols(,lObservedDateTimeStr,,iCloudCover)
Do iCurrentConditionsList768.2.$assigncols(,lCurrTemp,,con(lCurrWindSpeed,kSp,'mph')) ## int(lWindRow.speed)
Do iCurrentConditionsList768.3.$assigncols(,lWeatherDescStr,,iCurrWindDir)
Do iCurrentConditionsList768.4.$assigncols(,con(iCurrPressure,kSp,"mb"),,con(lCurrentConditionRow.humidity,"%"))

If iCurrentBP=320
	Calculate iCurrentConditionsList as iCurrentConditionsList320
Else
	Calculate iCurrentConditionsList as iCurrentConditionsList768
End If

Calculate iCurrWeatherDesc as con(lCurrTemp,kSp,lWeatherDescStr)

# generate the icon
Calculate iCurrWeatherIconID as lWeatherDescRow.icon
Calculate iCurrWeatherIconID as con("http://openweathermap.org/img/wn/",iCurrWeatherIconID,"@2x.png")
Calculate iCurrWeatherIconID as con("<img src='",iCurrWeatherIconID,"'>")
Do $cinst.$objs.pagePane.$objs.currentPane.$objs.currWeatherIcon.$html.$assign(iCurrWeatherIconID) Returns #F